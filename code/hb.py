import numpy as np

alpha=np.array([4.64450917e-04, 4.59843953e-04, 4.56541405e-04, 4.49412859e-04,
                4.44019873e-04, 4.38840347e-04, 4.36631513e-04, 4.35426343e-04,
                4.40652680e-04, 4.50204271e-04, 4.52440654e-04, 4.56158672e-04,
                4.52746859e-04, 4.45117033e-04, 4.18078568e-04, 3.74361980e-04,
                3.08624658e-04, 2.44901629e-04, 1.90377280e-04, 1.44408506e-04,
                1.19815285e-04, 1.07052743e-04, 9.94965989e-05, 9.32531099e-05,
                9.19848594e-05, 8.68007602e-05, 8.30961348e-05, 8.24268084e-05,
                8.22643606e-05, 8.29298527e-05, 8.43169045e-05, 8.71962487e-05,
                9.35152950e-05, 1.03997610e-04, 1.19498546e-04, 1.45460038e-04,
                1.83920511e-04, 2.33809897e-04, 2.87059245e-04, 3.31701931e-04,
                3.50761148e-04, 3.44181886e-04, 3.22278298e-04, 2.76050886e-04,
                2.25409335e-04, 1.77327713e-04, 1.32561548e-04, 1.08827841e-04,
                6.55793311e-05, 3.44582101e-05, 1.26901629e-05, 1.19037973e-06,
                8.12336031e-08, 5.56500921e-09, 0.00000000e+00, 0.00000000e+00,
                0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00])[::-1]


Zm=np.array([ 38.28628061,  38.99484857,  40.1001829 ,  41.278296  ,
              42.73772175,  44.23245575,  45.77196696,  46.84135481,
              47.07951109,  46.80181329,  46.39681691,  45.84963344,
              45.24291007,  44.56530851,  43.85693821,  42.56471596,
              40.53830233,  38.76302878,  38.20139464,  38.12952293,
              38.10489595,  38.03346376,  37.91479551,  37.7041277 ,
              37.38867841,  36.9820986 ,  36.49618968,  36.0270257 ,
              35.60452052,  35.18496915,  34.80599548,  34.46842697,
              34.01838283,  33.30953502,  32.46805684,  31.53400333,
              30.48987371,  29.27848852,  27.91523975,  26.35855109,
              24.25095882,  21.42134138,  17.81666632,  13.30217772,
              7.59279401,  -0.95148673, -12.74745633, -55.69322607,
              -67.66551557, -69.99492234, -70.71208719, -70.8680151 ,
              -70.95229974, -71.05470361, -71.17029084, -71.30076857,
              -71.45283699, -71.625536  , -71.80644586, -71.97866189,
              -72.13319757, -72.26948156, -72.39102466, -72.51209997,
              -72.64096294, -72.77683709, -72.917975  , -73.06176832,
              -73.20526193, -73.34607206, -73.48326237, -73.61750867,
              -73.75020571, -73.88243759, -74.01476277, -74.14739969,
              -74.2802867 , -74.4129771 , -74.54548903, -74.67993645])[::-1]

dr=0.25
piaKu=10.67958596

beta=0.72
def hb(zKum,alpha,dr,srt_piaKu):
    q=0.2*np.log(10)
    zeta=q*beta*alpha*10**(0.1*zKum*beta)*dr
    zetamax=1.-10**(-srt_piaKu/10.*beta)
    #print(zetamax)
    #print(zeta)
    if zeta.cumsum()[-1]>zetamax:
        eps=0.9999*zetamax/zeta.cumsum()[-1]
        zeta=eps*zeta
    else:
        eps=1.0
    corrc=eps*zeta.cumsum()
    zc=zKum-10/beta*np.log10(1-corrc)
    return zc,eps

retCoeff=np.array([ 0.05681683, -1.21930925])
r1L=[]
r2L=[]
r3L=[]
from netCDF4 import Dataset
dS=Dataset("deepRadarRetrievals/zKuPrecip_NUBF_Dataset.nc","r+")
#dS.createVariable('zKuHB','float64',('dim_0', 'dim_1'))

zKuHBL=[]
for Zm1,piaKu,prate,Zc1 in zip(dS["zKu_MS_NUBF"][:],dS["piaKuC"][:],
                               dS["pRate"][:],dS["zKuTrue"][:]):
    Zm=Zm1.data[::-1]
    zc,eps=hb(Zm,alpha,dr,1.25*piaKu)
    r1=10**(retCoeff[0]*zc[-1]+retCoeff[1])
    if piaKu<6:
        continue
    r1=min(300,r1)
    r1L.append(r1)
    r2L.append(prate[0])
    r3L.append(10**(retCoeff[0]*Zc1.data[0]+retCoeff[1]))
    zKuHBL.append(zc[::-1])

#dS["zKuHB"][:,:]=np.array(zKuHBL)

dS.close()
